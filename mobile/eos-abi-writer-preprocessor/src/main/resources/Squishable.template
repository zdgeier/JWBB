package ${package_name};

import com.memtrip.eos.core.crypto.EosPublicKey;
import com.memtrip.eos.abi.writer.ByteWriter;
import com.memtrip.eos.abi.writer.Squishable;

import ${abi.getClassPackage()}.${abi.getClassName()};

public class ${abi.getClassName()}Squishable implements Squishable<${abi.getClassName()}> {

    private final AbiBinaryGen${class_postfix} abiBinaryGen;

    ${abi.getClassName()}Squishable(AbiBinaryGen${class_postfix} abiBinaryGen) {
        this.abiBinaryGen = abiBinaryGen;
    }

    @Override
    public void squish(${abi.getClassName()} ${abi.getClassName()?lower_case}, ByteWriter byteWriter) {
        <#list abi.getFields() as field>
            <#if field.isName()>
                byteWriter.putName(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isAccountName()>
                byteWriter.putAccountName(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isBlockNum()>
                byteWriter.putBlockNum(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isBlockPrefix()>
                byteWriter.putBlockPrefix(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isPublicKey()>
                byteWriter.putPublicKey(new EosPublicKey(${abi.getClassName()?lower_case}.${field.getName()}()));
            </#if>
            <#if field.isAsset()>
                byteWriter.putAsset(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isChainId()>
                byteWriter.putChainId(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isHexCollection()>
                byteWriter.putHexCollection(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isData()>
                byteWriter.putData(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isTimestamp()>
                byteWriter.putTimestampMs(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isByte()>
                byteWriter.putByte(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isShort()>
                byteWriter.putShort(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isInt()>
                byteWriter.putInt(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isVariableUInt()>
                byteWriter.putVariableUInt(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isLong()>
                byteWriter.putLong(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isFloat()>
                byteWriter.putFloat(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isBytes()>
                byteWriter.putBytes(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isString()>
                byteWriter.putString(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isStringCollection()>
                byteWriter.putStringCollection(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isAccountNameCollection()>
                byteWriter.putAccountNameCollection(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isChild()>
                abiBinaryGen.squish${extractObject(field.getClassType())}(${abi.getClassName()?lower_case}.${field.getName()}());
            </#if>
            <#if field.isCollection()>
                abiBinaryGen.squishCollection${extractListObject(field.getClassType())}(
                    ${abi.getClassName()?lower_case}.${field.getName()}(),
                    byteWriter);
            </#if>
        </#list>
    }
}